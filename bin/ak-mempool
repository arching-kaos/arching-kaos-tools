#!/usr/bin/env bash
###
### arching-kaos-tools
### Tools to interact and build an Arching Kaos Infochain
### Copyright (C) 2021 - 2025  kaotisk
###
### This program is free software: you can redistribute it and/or modify
### it under the terms of the GNU General Public License as published by
### the Free Software Foundation, either version 3 of the License, or
### (at your option) any later version.
###
### This program is distributed in the hope that it will be useful,
### but WITHOUT ANY WARRANTY; without even the implied warranty of
### MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
### GNU General Public License for more details.
###
### You should have received a copy of the GNU General Public License
### along with this program.  If not, see <http://www.gnu.org/licenses/>.
###
##
## Brief description
##
## Usage:
##
##    -h, --help                  Prints this help message
##
fullprogrampath="$(realpath $0)"
PROGRAM=$(basename $0)
descriptionString="Quick description"

# At least these
source $AK_LIBDIR/_ak_lib_load
_ak_lib_load _ak_log
_ak_lib_load _ak_script
# Assumptions:
# I suppose each ak node is connected to some IP.
# They also run IPFS.
# They also are a part of our swarm.
# So should we ask for our peers?

source $AK_LIBDIR/_ak_ipfs

_ak_ipfs_swarm_peers > tmp_peers

while IFS="" read -r p || [ -n "$p" ]
do
    peer="$(echo "$p" | sed -e 's/^.*\///')"
    _ak_log_info "Peer $peer found! Examining..."
    resolved_peer_ns="$(_ak_ipns_resolve /ipns/${peer})"
    if [ -n "${resolved_peer_ns}" ]
    then
        _ak_log_info "Resolved peer: ${resolved_peer_ns}"
        _ak_ipfs_cat $resolved_peer_ns/zlatest
    fi
done < tmp_peers

rm tmp_peers

